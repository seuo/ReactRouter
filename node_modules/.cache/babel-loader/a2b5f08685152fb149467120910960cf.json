{"ast":null,"code":"import _defineProperty from \"/Users/270020120/Documents/GitHub/React/Apps/app-with-router/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/270020120/Documents/GitHub/React/Apps/app-with-router/src/Components/route-type.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport Project from './project';\nimport { getSingleType } from './api';\n\nclass RouteType extends Component {\n  constructor(props) {\n    super(props);\n\n    this.routeGetType = id => {\n      getSingleType(id).then(res => this.setState({\n        type: res.data\n      }));\n    };\n\n    this.state = {\n      type: null\n    };\n  }\n\n  componentDidMount() {\n    var id = this.props.id;\n    this.routeGetType(id);\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    var id = this.props.id;\n\n    if (id != nextProps.id) {\n      this.routeGetType(nextProps.id);\n    }\n\n    return true;\n  }\n\n  render() {\n    var type = this.state.type;\n    return type ? React.createElement(\"div\", {\n      className: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, type.name), type.projects.map(project => {\n      var projectProps = _objectSpread({}, project, {\n        key: project.id,\n        refreshData: this.routeGetType(type.id)\n      });\n\n      return React.createElement(Project, Object.assign({}, projectProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }));\n    })) : null;\n  }\n\n}\n\nexport default RouteType;","map":{"version":3,"sources":["/Users/270020120/Documents/GitHub/React/Apps/app-with-router/src/Components/route-type.js"],"names":["React","Component","Project","getSingleType","RouteType","constructor","props","routeGetType","id","then","res","setState","type","data","state","componentDidMount","shouldComponentUpdate","nextProps","nextState","render","name","projects","map","project","projectProps","key","refreshData"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,aAAR,QAA4B,OAA5B;;AAEA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAChCI,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAQlBC,YARkB,GAQFC,EAAD,IAAO;AACpBL,MAAAA,aAAa,CAACK,EAAD,CAAb,CAAkBC,IAAlB,CAAuBC,GAAG,IAAG,KAAKC,QAAL,CAAc;AAACC,QAAAA,IAAI,EAACF,GAAG,CAACG;AAAV,OAAd,CAA7B;AACD,KAViB;;AAGhB,SAAKC,KAAL,GAAa;AACXF,MAAAA,IAAI,EAAC;AADM,KAAb;AAGD;;AAMDG,EAAAA,iBAAiB,GAAE;AAAA,QACZP,EADY,GACN,KAAKF,KADC,CACZE,EADY;AAEjB,SAAKD,YAAL,CAAkBC,EAAlB;AACD;;AAEDQ,EAAAA,qBAAqB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AAAA,QACrCV,EADqC,GAC/B,KAAKF,KAD0B,CACrCE,EADqC;;AAE1C,QAAIA,EAAE,IAAIS,SAAS,CAACT,EAApB,EAAuB;AACrB,WAAKD,YAAL,CAAkBU,SAAS,CAACT,EAA5B;AACD;;AACD,WAAO,IAAP;AACD;;AAECW,EAAAA,MAAM,GAAE;AAAA,QACDP,IADC,GACO,KAAKE,KADZ,CACDF,IADC;AAEN,WAAOA,IAAI,GACT;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,IAAI,CAACQ,IAAV,CADA,EAKQR,IAAI,CAACS,QAAL,CAAcC,GAAd,CAAmBC,OAAD,IAAa;AAE7B,UAAIC,YAAY,qBACXD,OADW;AAEdE,QAAAA,GAAG,EAAEF,OAAO,CAACf,EAFC;AAGdkB,QAAAA,WAAW,EAAE,KAAKnB,YAAL,CAAkBK,IAAI,CAACJ,EAAvB;AAHC,QAAhB;;AAKA,aAAQ,oBAAC,OAAD,oBAAagB,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAR;AACD,KARD,CALR,CADS,GAiBP,IAjBJ;AAkBD;;AA9C6B;;AAiDlC,eAAepB,SAAf","sourcesContent":["import React, {Component} from 'react';\nimport Project from './project';\nimport {getSingleType} from './api'; \n\nclass RouteType extends Component {\n  constructor(props){\n    super(props)\n\n    this.state = {\n      type:null\n    };\n  };\n\n  routeGetType = (id) =>{\n    getSingleType(id).then(res=> this.setState({type:res.data}))\n  }\n\n  componentDidMount(){\n    var {id} = this.props\n    this.routeGetType(id)\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    var {id} = this.props\n    if( id != nextProps.id){\n      this.routeGetType(nextProps.id)\n    }\n    return true\n  }\n\n    render(){\n      var {type} = this.state\n      return type ? (\n        <div className=\"main\">\n        <h3>{type.name}</h3>\n\n\n          {\n                type.projects.map((project) => {\n\n                  var projectProps = {\n                    ...project,\n                    key: project.id,\n                    refreshData: this.routeGetType(type.id)\n                  };\n                  return (<Project {...projectProps} />)\n                })\n              }\n          </div>\n      ) : null\n    }\n}\n\nexport default RouteType;"]},"metadata":{},"sourceType":"module"}